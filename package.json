{
  "name": "@kmwork/front-core-components",
  "version": "2.0.5",
  "description": "Front Core Components (based on Semantic)",
  "license": "Apache-2.0",
  "author": {
    "name": "Andrey \"Kinjeiro\" Kuzmin",
    "email": "kinjeiro@gmail.com"
  },
  "contributors": [
    "kinjeiro@gmail.com"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/kmwork/fork_front-core-components.git"
  },
  "homepage": "https://github.com/kmwork/fork_front-core-components",
  "scripts": {
    "start-build": "node ./.build/server.js",
    "start-static-build": "cd ./.build && live-server --entry-file=./index.html",
    "start-daemon": "pm2 start ./.build/server.js --name FrontCore_Components",
    "stop-daemon": "pm2 stop FrontCore_Components || echo 'pm2 app not started'",
    "start-production": "cross-env NODE_ENV=production npm run start-build",
    "start-production-daemon": "cross-env NODE_ENV=production npm run start-daemon",
    "update-prod": "npm run stop-daemon && npm i && npm run build && npm run start-production-daemon",
    "start-development": "cross-env NODE_ENV=development npm run start-build",
    "start-development-daemon": "cross-env NODE_ENV=development SERVER_PORT=8085 npm run start-daemon",
    "start-integration": "cross-env NODE_ENV=integration npm run start-build",
    "start-loadtesting": "cross-env NODE_ENV=loadtesting npm run start-build",
    "start-prelive": "cross-env NODE_ENV=prelive npm run start-build",
    "start-localhost": "cross-env NODE_ENV=localhost HOT_LOADER=1 APP_MOCKS=1 USE_MOCKS=1 CLIENT_SIDE_RENDERING=1 node ./node_modules/@kmwork/front-core/build-scripts/start.js",
    "start-localhost-other-port": "cross-env SERVER_PORT=8082 PROXY_PORT=9092 npm run start-localhost",
    "start": "npm run start-localhost",
    "start-without-SSR": "cross-env CLIENT_SIDE_RENDERING=1 npm run start-localhost",
    "start-frontend-server": "node ./node_modules/@kmwork/front-core/build-scripts/start-frontend.js",
    "start-backend-server": "node ./node_modules/@kmwork/front-core/build-scripts/start-backend.js",
    "build-inner": "node ./node_modules/@kmwork/front-core/build-scripts/update-babelrc.js && node ./node_modules/@kmwork/front-core/build-scripts/build.js",
    "build": "cross-env NODE_ENV=production npm run build-inner",
    "build-development": "cross-env NODE_ENV=development CONTEXT_PATH=mkk npm run build-inner",
    "test-build": "npm run build && npm run start-production",
    "lint": "./node_modules/.bin/eslint --ext js,jsx .",
    "build-docs-md": "documentation build src/** --config docs/api-documentation.yml --format md --output docs/api.md",
    "build-docs-html": "documentation build src/** --config docs/api-documentation.yml --format html --output docs/api",
    "compile": "node ./node_modules/@kmwork/front-core/build-scripts/update-babelrc.js && rimraf lib/* -f && babel src --out-dir lib --copy-files",
    "publish-patch": "npm run release-patch && npm publish --access public",
    "publish-patch-r": "git push --follow-tags && npm publish --access public",
    "release-patch": "npm version patch -m \"chore(*) patch version: %s\"",
    "release-minor": "npm version minor -m \"chore(*) minor version: %s\"",
    "release-major": "npm version major -m \"chore(*) major version: %s\"",
    "preversion": "npm run update-core-patch && npm run test",
    "version": "npm run build-docs-html && npm run build-docs-md && npm run compile && git add -A",
    "//comment//": "prepublishOnly - only run before publish",
    "postversion": "git push --follow-tags",
    "postversion-hg": "hg add package.json && hg commit package.json -m \"front-core new version\" && hg push",
    "postversion-git": "git push --follow-tags",
    "test-client": "cross-env NODE_ENV=test karma start ./node_modules/@kmwork/front-core/test/client/run-client-tests.js",
    "test-client:watch": "npm run test-client -- --watch",
    "test-server": "cross-env NODE_ENV=test mocha ./node_modules/@kmwork/front-core/test/server/run-server-tests.js --timeout 10000",
    "test-server:watch": "npm run test-server -- --watch",
    "test-scripts": "cross-env NODE_ENV=test mocha ./node_modules/@kmwork/front-core/test/scripts/run-scripts-tests.js",
    "test": "npm run test-scripts && npm run test-server && npm run test-client",
    "sync-work-branch": "sh ./node_modules/@kmwork/front-core/build-scripts/sync-work-branch.sh",
    "clear-cashe-and-install": "rm -rf ./node_modules && rm -f package-lock.json && npm cache clean --force && npm install --production",
    "update-core-patch": "npm update --save @kmwork/front-core@latest",
    "update-core": "npm install --save @kmwork/front-core@latest",
    "minimized:copy": "cpr . minimizedPackage/front-core-components --delete-first --filter \"^(.git|.idea|.build|build-scripts|lib|minimizedPackage|logs|node_modules|old|src).*\"",
    "minimized:libs": "cross-env MINIMIZED=true node ./node_modules/@kmwork/front-core/build-scripts/update-babelrc.js && babel src --out-dir minimizedPackage/front-core-components/lib --copy-files --include-dotfiles",
    "minimized:scripts": "minify build-scripts --mangle.keepClassName --outDir minimizedPackage/front-core-components/build-scripts",
    "minimized": "npm run minimized:copy && npm run minimized:scripts && npm run minimized:libs"
  },
  "deletedDependencies": {
    "redux-devtools": "~3.1.1",
    "redux-devtools-extension": "~2.13.2",
    "format-number": "~3.0.0",
    "email-validator": "~1.0.7",
    "fast-json-patch": "~2.0.6",
    "store2": "~2.5.1",
    "react-localization": "~0.0.17",
    "object-hash": "~1.2.0",
    "jsonwebtoken": "~7.4.1",
    "google-libphonenumber": "~3.0.9",
    "echarts": "~3.7.2",
    "echarts-for-react": "~2.0.0",
    "hawk": "~6.0.2",
    "redux-form-semantic-ui": "~1.0.0",
    "react-tagcloud": "~1.2.0",
    "react-truncate": "~2.2.2"
  },
  "toCoreDependencies": {},
  "dependencies": {
    "config": "~3.3.3",
    "rc-tree-select": "~4.3.0",
    "react-dates": "~21.8.0",
    "react-dropzone": "~11.3.1",
    "react-image-gallery": "~1.0.9",
    "react-redux-toastr": "~7.6.5",
    "react-scroll": "~1.8.1",
    "redux-form": "~8.3.7",
    "semantic-ui-css": "~2.4.1",
    "semantic-ui-react": "~2.0.3"
  },
  "peerDependencies": {
    "@kmwork/front-core": ">=1.9.57",
    "react": ">=17.0.1",
    "react-dom": ">=17.0.1"
  },
  "devDependencies": {
    "@kmwork/front-core": "~1.9.61",
    "autoprefixer": "~10.2.4",
    "awesome-typescript-loader": "~5.2.1",
    "babel-cli": "~6.26.0",
    "babel-eslint": "~10.1.0",
    "babel-minify": "~0.5.1",
    "babel-preset-minify": "~0.5.1",
    "chai": "~4.3.0",
    "chai-as-promised": "~7.1.1",
    "chai-dom": "~1.8.2",
    "chai-spies": "~1.0.0",
    "chalk": "~4.1.0",
    "cpr": "~3.0.1",
    "cross-env": "~7.0.3",
    "dirty-chai": "~2.0.1",
    "documentation": "~13.1.1",
    "enzyme": "~3.11.0",
    "enzyme-adapter-react-16": "~1.15.6",
    "eslint": "~7.20.0",
    "eslint-config-airbnb": "~18.2.1",
    "eslint-config-standard": "~16.0.2",
    "eslint-config-standard-react": "~11.0.1",
    "eslint-plugin-babel": "~5.3.1",
    "eslint-plugin-import": "~2.22.1",
    "eslint-plugin-jsdoc": "~32.2.0",
    "eslint-plugin-jsx-a11y": "~6.4.1",
    "eslint-plugin-node": "~11.1.0",
    "eslint-plugin-promise": "~4.3.1",
    "eslint-plugin-react": "~7.22.0",
    "eslint-plugin-standard": "~5.0.0",
    "git-hooks": "1.1.10",
    "glob": "~7.1.6",
    "ignore-styles": "~5.0.1",
    "isparta-loader": "~2.0.0",
    "istanbul": "~0.4.2",
    "karma": "~6.1.1",
    "karma-chai": "~0.1.0",
    "karma-chai-as-promised": "~0.1.2",
    "karma-chai-dom": "~1.1.0",
    "karma-chai-spies": "~0.1.4",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.0.3",
    "karma-global-preprocessor": "~0.0.2",
    "karma-junit-reporter": "~2.0.1",
    "karma-mocha": "~2.0.1",
    "karma-mocha-reporter": "~2.2.5",
    "karma-sauce-launcher": "~4.3.5",
    "karma-sinon": "~1.0.5",
    "karma-sourcemap-loader": "~0.3.8",
    "karma-webpack": "~5.0.0",
    "live-server": "~1.2.1",
    "mocha": "~8.3.0",
    "react": "~17.0.1",
    "react-dom": "~17.0.1",
    "respawn": "~2.6.0",
    "sinon": "~9.2.4",
    "sinon-chai": "~3.5.0",
    "source-map-support": "~0.5.19",
    "stylelint": "~13.11.0",
    "typescript": "~4.2.2",
    "uglify-es": "github:mishoo/UglifyJS2#harmony",
    "webpack-dev-server": "~3.11.2",
    "yargs": "~16.2.0"
  }
}
